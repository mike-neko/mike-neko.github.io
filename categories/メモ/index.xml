<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>メモ on M.Ikeの小ネタ集</title>
    <link>https://mike-neko.github.io/categories/%E3%83%A1%E3%83%A2/</link>
    <description>Recent content in メモ on M.Ikeの小ネタ集</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Thu, 28 Jan 2016 22:32:26 +0900</lastBuildDate>
    <atom:link href="https://mike-neko.github.io/categories/%E3%83%A1%E3%83%A2/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Metal組み込み関数</title>
      <link>https://mike-neko.github.io/blog/metal%E7%B5%84%E3%81%BF%E8%BE%BC%E3%81%BF%E9%96%A2%E6%95%B0/</link>
      <pubDate>Thu, 28 Jan 2016 22:32:26 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/metal%E7%B5%84%E3%81%BF%E8%BE%BC%E3%81%BF%E9%96%A2%E6%95%B0/</guid>
      <description>

&lt;h2 id=&#34;metalのシェーダで利用できる関数のまとめ:4dfc7da6cd3b1c47c8c108751f0fee0c&#34;&gt;Metalのシェーダで利用できる関数のまとめ&lt;/h2&gt;

&lt;h4 id=&#34;hlsl-glslは各言語との対比:4dfc7da6cd3b1c47c8c108751f0fee0c&#34;&gt;HLSL/GLSLは各言語との対比&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;(空白) : 同じ&lt;/li&gt;
&lt;li&gt;ー : 該当なし&lt;/li&gt;
&lt;li&gt;△ : 同等の関数があるが詳細が異なる&lt;/li&gt;
&lt;li&gt;(関数名) : 挙動は同じだが、名前が別の関数がある&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;共通関数:4dfc7da6cd3b1c47c8c108751f0fee0c&#34;&gt;共通関数&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;T は浮動小数点数のスカラーかベクター&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Metal&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;HLSL&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;GLSL&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;T clamp(T x, T min, T max)&lt;/td&gt;
&lt;td&gt;x を [min, max] の範囲にクランプする&lt;br&gt;fmin(fmax(x, min), max) を返す&lt;br&gt;min &amp;gt; maxは&lt;strong&gt;不定&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T mix(T x, T y, T a)&lt;/td&gt;
&lt;td&gt;[x, y] の間の a で線形補間&lt;br&gt;x + (y – x) * a を返す&lt;br&gt;a は 0.0 から 1.0。それ以外は&lt;strong&gt;不定&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;lerp&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T saturate(T x)&lt;/td&gt;
&lt;td&gt;x を [0.0, 1.0] の範囲にクランプして返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T sign(T x)&lt;/td&gt;
&lt;td&gt;x &amp;gt; 0 で 1.0, x &amp;lt; 0 で -1.0,&lt;br&gt;x = -0.0 で -0.0, x = +0.0 で +0.0,&lt;br&gt;x = NaN で 0.0 を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;△&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;△&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T smoothstep(T e0, T e1, T x)&lt;/td&gt;
&lt;td&gt;x &amp;lt;= e0 で 0.0, x &amp;gt;= e1 で 1.0&lt;BR&gt;それ以外は [0.0, 1.0] の範囲でエルミート補間した値を返す&lt;br&gt;スムーズなトランジションに便利&lt;br&gt;t = clamp((x – e0)/(e1 – e0), 0, 1);&lt;br&gt;return t * t * (3 – 2 * t);と等価&lt;br&gt;e0 &amp;gt;= e1 または&lt;br&gt; x, e0, e1 のいずれかが NaN は&lt;strong&gt;不定&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T step(T edge, T x)&lt;/td&gt;
&lt;td&gt;x &amp;lt; edge で 0.0&lt;br&gt;それ以外は 1.0 を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;整数関数:4dfc7da6cd3b1c47c8c108751f0fee0c&#34;&gt;整数関数&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;T は整数のスカラーかベクター&lt;/li&gt;
&lt;li&gt;Tu は符号なし整数のスカラーかベクター&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Metal&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;HLSL&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;GLSL&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;T abs(T x)&lt;br&gt;T fabs(T x)&lt;/td&gt;
&lt;td&gt;x の絶対値を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Tu absdiff(T x, T y)&lt;/td&gt;
&lt;td&gt;オーバーフローなしで x - y の絶対値を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T clz(T x)&lt;/td&gt;
&lt;td&gt;x の先頭ビットから連続する 0 の個数&lt;br&gt;x = 0 で x の型のビットのサイズを返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T ctz(T x)&lt;/td&gt;
&lt;td&gt;x の末尾ビットから連続する 0 の個数&lt;br&gt;x = 0 で x の型のビットのサイズを返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T hadd(T x, T y)&lt;/td&gt;
&lt;td&gt;(x + y) &amp;gt;&amp;gt; 1 を返す&lt;br&gt;中間合計はオーバーフローしない&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T madhi(T a, T b, T c)&lt;/td&gt;
&lt;td&gt;mulhi(a, b) + c を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T madsat(T a, T b, T c)&lt;/td&gt;
&lt;td&gt;saturate(a * b + c) を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T max(T x, T y)&lt;/td&gt;
&lt;td&gt;x と y の最大値を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T min(T x, T x)&lt;/td&gt;
&lt;td&gt;x と y の最小値を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T mulhi(T x, T y)&lt;/td&gt;
&lt;td&gt;x * y の結果の上位半分のビットを返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T popcount(T x)&lt;/td&gt;
&lt;td&gt;x の 0 ではないビットの数を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T rhadd(T x, T y)&lt;/td&gt;
&lt;td&gt;(x + y + 1) &amp;gt;&amp;gt; 1 を返す&lt;br&gt;中間合計はオーバーフローしない&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T rotate(T v, T i)&lt;/td&gt;
&lt;td&gt;v の各要素に対し対応する i の要素の値のビット数分左へシフトした値を返す&lt;br&gt;あふれたビットは右端から挿入される&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T subsat(T x, T y)&lt;/td&gt;
&lt;td&gt;saturate(x - y) を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;関係関数:4dfc7da6cd3b1c47c8c108751f0fee0c&#34;&gt;関係関数&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;T は浮動小数点数のスカラーかベクター&lt;/li&gt;
&lt;li&gt;Ti は整数かブーリアン型のスカラーかベクター&lt;/li&gt;
&lt;li&gt;Tb はブーリアン型のスカラーかベクター&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Metal&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;HLSL&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;GLSL&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;bool all(Tb x)&lt;/td&gt;
&lt;td&gt;x の全ての要素が true の時に true を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;△&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;bool any(Tb x)&lt;/td&gt;
&lt;td&gt;x のいずれかの要素が true の時に true を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;△&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Tb isfinite(T x)&lt;/td&gt;
&lt;td&gt;x が有限の場合は true を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Tb isinf(T x)&lt;/td&gt;
&lt;td&gt;x が無限大(+/-)であれば true を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Tb isnan(T x)&lt;/td&gt;
&lt;td&gt;x がNanであれば true を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Tb isnormal(T x)&lt;/td&gt;
&lt;td&gt;x が正規化数であれば true を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Tb isordered(T x, T y)&lt;/td&gt;
&lt;td&gt;x と y の引数が順序付けられているか&lt;br&gt;(x == x) &amp;amp;&amp;amp; (y == y) を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Tb isunordered(T x, T y)&lt;/td&gt;
&lt;td&gt;x と y の引数が順序付けられていないか&lt;br&gt;x か y が NaN であれば true を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T select(T a, T b, Tb c)&lt;/td&gt;
&lt;td&gt;result[i] = c[i] ? b[i] : a[i] を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Ti select(Ti a, Ti b, Tb c)&lt;/td&gt;
&lt;td&gt;result = c ? b : a　を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Tb signbit(T x)&lt;/td&gt;
&lt;td&gt;符号ビットをテストする&lt;br&gt;x に浮動小数点数がセットされている場合は true&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;数学関数:4dfc7da6cd3b1c47c8c108751f0fee0c&#34;&gt;数学関数&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;T は浮動小数点数のスカラーかベクター&lt;/li&gt;
&lt;li&gt;Ti は整数のスカラーかベクター&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Metal&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;HLSL&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;GLSL&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;T acos(T x)&lt;/td&gt;
&lt;td&gt;x のアークコサインを返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T acosh(T x)&lt;/td&gt;
&lt;td&gt;x のハイパボリックアークコサインを返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T asin(T x)&lt;/td&gt;
&lt;td&gt;x のアークサインを返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T asinh(T x)&lt;/td&gt;
&lt;td&gt;x のハイパボリックアークサインを返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T atan(T x)&lt;/td&gt;
&lt;td&gt;x のアークタンジェントを返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T atan2(T y, T x)&lt;/td&gt;
&lt;td&gt;y と x のアークタンジェントを返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T atanh(T x)&lt;/td&gt;
&lt;td&gt;x のハイパボリックアークタンジェントを返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T ceil(T x)&lt;/td&gt;
&lt;td&gt;x を正の無限大に近いほうの整数に丸めた値を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T copysign(T x, T y)&lt;/td&gt;
&lt;td&gt;y の符号に変えた x を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T cos(T x)&lt;/td&gt;
&lt;td&gt;x のコサインを返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T cosh(T x)&lt;/td&gt;
&lt;td&gt;x のハイパボリックコサインを返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T cospi(T x)&lt;/td&gt;
&lt;td&gt;pi * x のコサインを返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T exp(T x)&lt;/td&gt;
&lt;td&gt;e ^ x を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T exp2(T x)&lt;/td&gt;
&lt;td&gt;2 ^ x を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T exp10(T x)&lt;/td&gt;
&lt;td&gt;10 ^ x を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T fdim(T x, T y)&lt;/td&gt;
&lt;td&gt;x &amp;gt; y で x - y,&lt;br&gt;x &amp;lt;= y で +0 を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T floor(T x)&lt;/td&gt;
&lt;td&gt;x を負の無限大に近いほうの整数に丸めた値を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T fma(T a, T b, T c)&lt;/td&gt;
&lt;td&gt;a * b + c を返す&lt;br&gt;融合積和演算(IEEE 754-2008準拠)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T fmod(T x, T y)&lt;/td&gt;
&lt;td&gt;x - y * trunc(x / y) を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T fract(T x)&lt;/td&gt;
&lt;td&gt;x の小数部を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;frac&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T frexp(T x, Ti &amp;amp;exp)&lt;/td&gt;
&lt;td&gt;x = [返り値] * 2 ^ exp となる&lt;br&gt;返り値は[&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt;, 1]の範囲か 0 となる&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Ti ilogb(T x)&lt;/td&gt;
&lt;td&gt;x の指数を整数で返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T ldexp(T x, Ti k)&lt;/td&gt;
&lt;td&gt;x * 2 ^ k を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T log(T x)&lt;/td&gt;
&lt;td&gt;x の自然対数を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T log2(T x)&lt;/td&gt;
&lt;td&gt;x の 2 を底とする対数を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T log10(T x)&lt;/td&gt;
&lt;td&gt;x の 10 を底とする対数を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T fmax(T x, T y)&lt;/td&gt;
&lt;td&gt;x と y の最大値を返す&lt;br&gt;片方の引数が NaN なら NaN では無い方の値を返す&lt;br&gt;両方が NaN なら NaN を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T fmin(T x, T y)&lt;/td&gt;
&lt;td&gt;x と y の最小値を返す&lt;br&gt;片方の引数が NaN なら NaN では無い方の値を返す&lt;br&gt;両方が NaN なら NaN を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T modf(T x, T &amp;amp;intval)&lt;/td&gt;
&lt;td&gt;x を同じ符号を持つ整数部と少数部に分ける&lt;br&gt;少数部を返り値で、整数部を intval で返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T pow(T x, T y)&lt;/td&gt;
&lt;td&gt;x ^ y を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T powr(T x, T y)&lt;/td&gt;
&lt;td&gt;x &amp;gt;= 0 の x ^ y を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T rint(T x)&lt;/td&gt;
&lt;td&gt;x を最近接偶数へ丸めた整数値を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T round(T x)&lt;/td&gt;
&lt;td&gt;x を直近の整数値に丸めて返す&lt;br&gt;半分の場合は 0 に近い方となる&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;△&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;△&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T rsqrt(T x)&lt;/td&gt;
&lt;td&gt;x の平方根の逆数を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T sin(T x)&lt;/td&gt;
&lt;td&gt;x のサインを返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T sincos(T x, T &amp;amp;cosval)&lt;/td&gt;
&lt;td&gt;x のサインとコサインを計算する&lt;br&gt;サインを返り値で、コサインを cosval で返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T sinh(T x)&lt;/td&gt;
&lt;td&gt;x のハイパボリックサインを返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T sinpi(T x)&lt;/td&gt;
&lt;td&gt;pi * x のサインを返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T sqrt(T x)&lt;/td&gt;
&lt;td&gt;x の平方根を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T tan(T x)&lt;/td&gt;
&lt;td&gt;x のタンジェントを返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T tanh(T x)&lt;/td&gt;
&lt;td&gt;x のハイパボリックタンジェントを返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T tanpi(T x)&lt;/td&gt;
&lt;td&gt;pi * x のタンジェントを返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T trunc(T x)&lt;/td&gt;
&lt;td&gt;x を 0 に近い方向へ丸めた値を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;行列関数:4dfc7da6cd3b1c47c8c108751f0fee0c&#34;&gt;行列関数&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Metal&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;HLSL&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;GLSL&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;float determinant(floatnxn)&lt;br&gt;half determinant(halfnxn)&lt;/td&gt;
&lt;td&gt;行列式を返す&lt;br&gt;行列は正方行列でなければならない&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;floatmxn transpose(floatnxm)&lt;br&gt;halfmxn transpose(halfnxm)&lt;/td&gt;
&lt;td&gt;転置行列を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;幾何関数:4dfc7da6cd3b1c47c8c108751f0fee0c&#34;&gt;幾何関数&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;T は浮動小数点数(floatn / halfn)のベクター&lt;/li&gt;
&lt;li&gt;Ts はベクターに対応するスカラー&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Metal&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;HLSL&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;GLSL&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;T cross(T x, T y)&lt;/td&gt;
&lt;td&gt;x と y の外積を返す&lt;br&gt;T は3次元ベクトルでなければならない&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Ts distance(T x, T y)&lt;/td&gt;
&lt;td&gt;x と y の距離を求める&lt;br&gt;length(x - y) を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Ts distance_squared(T x, T y)&lt;/td&gt;
&lt;td&gt;x と y の距離の平方を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Ts dot(T x, T y)&lt;/td&gt;
&lt;td&gt;x と y の内積を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T faceforward(T N, T I, T Nref)&lt;/td&gt;
&lt;td&gt;dot(Nref, I) &amp;lt; 0.0 で N&lt;br&gt;それ以外は -N を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Ts length(T x)&lt;/td&gt;
&lt;td&gt;x のベクトルの長さを返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Ts length_squared(T x)&lt;/td&gt;
&lt;td&gt;x のベクトルの長さの平方を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T normalize(T x)&lt;/td&gt;
&lt;td&gt;x の正規化した値を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T reflect(T I, T N)&lt;/td&gt;
&lt;td&gt;入射ベクトル I と面の法線ベクトル N から、反射ベクトル I – 2 * dot(N, I) * N を返す&lt;br&gt;N は正規されていなければならない&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T refract(T I, T N, Ts eta)&lt;/td&gt;
&lt;td&gt;入射ベクトル I と面の法線ベクトル N と屈折率 eta から、屈折ベクトルを返す&lt;br&gt;I と N  は正規されていなければならない&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;グラフィック関数:4dfc7da6cd3b1c47c8c108751f0fee0c&#34;&gt;グラフィック関数&lt;/h2&gt;

&lt;h3 id=&#34;フラグメントシェーダ:4dfc7da6cd3b1c47c8c108751f0fee0c&#34;&gt;フラグメントシェーダ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;T はfloat, float2, float3, float4, half, half2, half3, half4&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Metal&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;HLSL&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;GLSL&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;T dfdx(T p)&lt;/td&gt;
&lt;td&gt;スクリーン空間の指定された x 座標に対する高精度の偏微分を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ddx&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;dFdxFine&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T dfdy(T p)&lt;/td&gt;
&lt;td&gt;スクリーン空間の指定された y 座標に対する高精度の偏微分を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ddy&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;dFdyFine&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;T fwidth(T p)&lt;/td&gt;
&lt;td&gt;fabs(dfdx(p)) + fabs(dfdy(p)) を返す&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;感想:4dfc7da6cd3b1c47c8c108751f0fee0c&#34;&gt;感想&lt;/h2&gt;

&lt;p&gt;さすが後発なだけあって、全部入り。GLSLをベースにHLSLやらOpenCLからありったけ詰め込んだような感じ。&lt;/p&gt;

&lt;h1 id=&#34;参考サイト:4dfc7da6cd3b1c47c8c108751f0fee0c&#34;&gt;参考サイト&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;公式：&lt;a href=&#34;https://developer.apple.com/library/ios/documentation/Metal/Reference/MetalShadingLanguageGuide/std-lib/std-lib.html&#34;&gt;Metal Standard Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OpenGL4.5：&lt;a href=&#34;https://www.opengl.org/sdk/docs/reference_card/opengl45-reference-card.pdf&#34;&gt;API Reference Card&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;DirectX：&lt;a href=&#34;https://msdn.microsoft.com/ja-jp/library/bb509611.aspx&#34;&gt;組み込み関数 (DirectX HLSL)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Hugo利用方法メモ</title>
      <link>https://mike-neko.github.io/blog/hugo%E5%88%A9%E7%94%A8%E6%96%B9%E6%B3%95%E3%83%A1%E3%83%A2/</link>
      <pubDate>Wed, 20 Jan 2016 22:48:33 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/hugo%E5%88%A9%E7%94%A8%E6%96%B9%E6%B3%95%E3%83%A1%E3%83%A2/</guid>
      <description>

&lt;p&gt;初めはOctopressを使ってたものの、シンタックスハイライトがどうもうまく好みにならなかったので、結局、１週間ほどでHugoに乗り換え。Octopressに比べると構成もわかりやすいし、最新の資料が多くてよかった。&lt;br /&gt;
テーマはなるべくシンプル、かつ、スマホでも見やすい&lt;a href=&#34;http://themes.gohugo.io/hyde-x/&#34;&gt;Hyde-X&lt;/a&gt;を選定。以下はHyde-Xの場合の設定なので、他のテーマでは変わるので注意。&lt;/p&gt;

&lt;h2 id=&#34;初期設定:8d244dac89903f7d90007c69acaf707d&#34;&gt;初期設定&lt;/h2&gt;

&lt;h3 id=&#34;ローカルにディレクトリ作成:8d244dac89903f7d90007c69acaf707d&#34;&gt;ローカルにディレクトリ作成&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;hugo new site &amp;lt;site-name&amp;gt;&lt;/code&gt;で作業用のローカルディレクトリを作成&lt;/li&gt;
&lt;li&gt;公開用ディレクトリを作成してGitを設定
&lt;code&gt;
cd &amp;lt;site-name&amp;gt;
mkdir public
git remote add origin https://github.com/&amp;lt;github name&amp;gt;/&amp;lt;github name&amp;gt;.github.io.git
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.gitignore&lt;/code&gt;を&lt;a href=&#34;https://github.com/github/gitignore&#34;&gt;https://github.com/github/gitignore&lt;/a&gt; から落としてきて、2の&lt;code&gt;public&lt;/code&gt;の中に置く。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;記事のテンプレを作成:8d244dac89903f7d90007c69acaf707d&#34;&gt;記事のテンプレを作成&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;site-name&amp;gt;/archetypes&lt;/code&gt;に&lt;code&gt;default.md&lt;/code&gt;を作成する。&lt;br /&gt;
内容は以下の感じ。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;date = &amp;quot;now()&amp;quot;
draft = true
slug = &amp;quot;&amp;quot;
title = &amp;quot;&amp;quot;
categories = []
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;configを編集:8d244dac89903f7d90007c69acaf707d&#34;&gt;configを編集&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;site-name&amp;gt;/config.toml&lt;/code&gt;を環境に合わせて編集する。&lt;br /&gt;
（設定方法はテーマのREADME.mdを参照）&lt;/p&gt;

&lt;h3 id=&#34;highlight-jsをカスタマイズ:8d244dac89903f7d90007c69acaf707d&#34;&gt;highlight.jsをカスタマイズ&lt;/h3&gt;

&lt;p&gt;デフォルトで入っていた分ではSwiftが未対応。。。まぁ基本的にはGistを使う予定だけど、一応使えるように。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://highlightjs.org/&#34;&gt;highlightjs公式&lt;/a&gt;で使いそうなものだけを選択してカスタムパッケージをDL&lt;/li&gt;
&lt;li&gt;DLしたものの中から&lt;code&gt;highlight.pack.js&lt;/code&gt;を&lt;code&gt;&amp;lt;site-name&amp;gt;/themes/hyde-x/static/js/highlight.pack.js&lt;/code&gt;と丸ごと置き換え&lt;/li&gt;
&lt;li&gt;カラースタイルもついでにXcodeにしたいので、DLしたものの中から&lt;code&gt;xcode.css&lt;/code&gt;を&lt;code&gt;&amp;lt;site-name&amp;gt;/themes/hyde-x/static/css/highlight&lt;/code&gt;に追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;config.toml&lt;/code&gt;の中の&lt;code&gt;highlight&lt;/code&gt;を&lt;code&gt;xcode&lt;/code&gt;に変更&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;これで、無事Swiftもハイライトされるようになった。&lt;/p&gt;

&lt;h3 id=&#34;gist埋め込みコードを設定:8d244dac89903f7d90007c69acaf707d&#34;&gt;Gist埋め込みコードを設定&lt;/h3&gt;

&lt;p&gt;普通にリンクをコピペしても良いのだけれども（&lt;del&gt;GistBoxを使い出したら逆にハッシュだけコピペするのが面倒だったり&lt;/del&gt;）、せっかくMarkdownで書いているのだから、あまりタグを入れて表記が揺らぐのも微妙なので。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;site-name&amp;gt;/layouts/shortcodes/gist.html&lt;/code&gt;を作成&lt;/li&gt;
&lt;li&gt;1のファイルに
&lt;code&gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;https://gist.github.com/{{ .Get 0 }}.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;
を貼り付けて保存&lt;/li&gt;
&lt;li&gt;使いたい場所で&lt;br /&gt;
&lt;code&gt;
{{ &amp;lt; gist gist_sha1_hash &amp;gt; }}
&lt;/code&gt;&lt;br /&gt;
とすると、
&lt;script type=&#34;text/javascript&#34; src=&#34;https://gist.github.com/5526bee6ee5efd2fc5a7.js&#34;&gt;&lt;/script&gt;
といった感じで埋め込まれる&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;記事の作成:8d244dac89903f7d90007c69acaf707d&#34;&gt;記事の作成&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;site-name&amp;gt;&lt;/code&gt;直下で&lt;code&gt;hugo new post/&amp;lt;file-name&amp;gt;.md&lt;/code&gt;を実行する。&lt;/p&gt;

&lt;p&gt;プレビューは&lt;code&gt;hugo server -t Hyde-X -D -w&lt;/code&gt;を実行した後に、&lt;a href=&#34;http://localhost:1313/&#34;&gt;http://localhost:1313/&lt;/a&gt; へアクセス。&lt;/p&gt;

&lt;h2 id=&#34;公開手順:8d244dac89903f7d90007c69acaf707d&#34;&gt;公開手順&lt;/h2&gt;

&lt;h3 id=&#34;流れ:8d244dac89903f7d90007c69acaf707d&#34;&gt;流れ&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;hugo -t Hyde-X&lt;/code&gt;でサイトを生成&lt;br /&gt;
(データ一式がpublicに格納される)&lt;/li&gt;
&lt;li&gt;1のデータをGitで&lt;code&gt;commit&lt;/code&gt;して&lt;code&gt;push&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;ただ、毎回これをやるのは面倒なので、シェルスクリプトにしておく&lt;/p&gt;

&lt;h3 id=&#34;デプロイ用スクリプト:8d244dac89903f7d90007c69acaf707d&#34;&gt;デプロイ用スクリプト&lt;/h3&gt;

&lt;script type=&#34;text/javascript&#34; src=&#34;https://gist.github.com/3159af7dd05c6278a778.js&#34;&gt;&lt;/script&gt;

&lt;h1 id=&#34;githubでの書き方:8d244dac89903f7d90007c69acaf707d&#34;&gt;GitHubでの書き方&lt;/h1&gt;

&lt;p&gt;参考リンク
&lt;a href=&#34;https://help.github.com/articles/github-flavored-markdown/&#34;&gt;GitHub専用(公式)&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;参考サイト:8d244dac89903f7d90007c69acaf707d&#34;&gt;参考サイト&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kotazi.com/blog/post/2015111301/&#34;&gt;【Hugo】Hosting on GitHub Pages【翻訳】&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tanksuzuki.com/post/hugo-github-pages-1/&#34;&gt;Hugoでブログ作成 第一部：Hugoでブログを作る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.cronally.com/embed-gists-with-hugo/&#34;&gt;Hugo Shortcode for Embedded Gists&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>