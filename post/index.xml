<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on M.Ikeの小ネタ集</title>
    <link>https://mike-neko.github.io/post/</link>
    <description>Recent content in Posts on M.Ikeの小ネタ集</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Wed, 25 Oct 2017 00:23:56 +0900</lastBuildDate>
    
	<atom:link href="https://mike-neko.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>文字列の先頭または末尾のTrim(Swift)</title>
      <link>https://mike-neko.github.io/blog/swift-trim/</link>
      <pubDate>Wed, 25 Oct 2017 00:23:56 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/swift-trim/</guid>
      <description>&lt;p&gt;Swiftで&lt;code&gt;LTrim&lt;/code&gt;や&lt;code&gt;RTrim&lt;/code&gt;相当の処理を行う方法&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Swift(Xcode)でプリプロセッサを使う</title>
      <link>https://mike-neko.github.io/blog/buildconf/</link>
      <pubDate>Thu, 19 Oct 2017 00:43:57 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/buildconf/</guid>
      <description>&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;

&lt;p&gt;Xcodeでプリプロセッサによるソースの切り替えを行う方法
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ファイル追記書き込み(Swift)</title>
      <link>https://mike-neko.github.io/blog/outputstream/</link>
      <pubDate>Tue, 10 Oct 2017 23:42:36 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/outputstream/</guid>
      <description>&lt;p&gt;Swiftっぽくファイルの書き込みをする方法&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>指定バイト数でファイルを作る（Python）</title>
      <link>https://mike-neko.github.io/blog/makefile/</link>
      <pubDate>Sat, 02 Sep 2017 22:00:42 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/makefile/</guid>
      <description>&lt;p&gt;ファイルIO系のテストをする時に、指定したバイト数ちょうどで、かつ、ランダムな内容のファイルを&lt;code&gt;Python&lt;/code&gt;で作成する方法&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SlideShareに日本語のKeynoteをアップロードする</title>
      <link>https://mike-neko.github.io/blog/slideshare/</link>
      <pubDate>Tue, 29 Aug 2017 23:13:59 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/slideshare/</guid>
      <description>&lt;p&gt;日本語の&lt;code&gt;Keynote&lt;/code&gt;のスライドを&lt;a href=&#34;https://www.slideshare.net/&#34;&gt;SlideShare&lt;/a&gt;へちゃんとアップロードする方法&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ARKitのまとめ（実装2）</title>
      <link>https://mike-neko.github.io/blog/arkit3/</link>
      <pubDate>Tue, 25 Jul 2017 23:37:35 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/arkit3/</guid>
      <description>&lt;h1 id=&#34;概要&#34;&gt;概要&lt;/h1&gt;

&lt;p&gt;WWDC2017で発表された&lt;code&gt;ARKit&lt;/code&gt;の実装についてのまとめ2&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ARKitのまとめ（実装）</title>
      <link>https://mike-neko.github.io/blog/arkit2/</link>
      <pubDate>Sun, 23 Jul 2017 21:31:30 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/arkit2/</guid>
      <description>&lt;h1 id=&#34;概要&#34;&gt;概要&lt;/h1&gt;

&lt;p&gt;WWDC2017で発表された&lt;code&gt;ARKit&lt;/code&gt;の実装についてのまとめ&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ARKitのまとめ（概要）</title>
      <link>https://mike-neko.github.io/blog/arkit1/</link>
      <pubDate>Sun, 16 Jul 2017 14:36:16 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/arkit1/</guid>
      <description>&lt;h1 id=&#34;概要&#34;&gt;概要&lt;/h1&gt;

&lt;p&gt;WWDC2017で発表された&lt;code&gt;ARKit&lt;/code&gt;についてのまとめ&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ARKit&lt;/code&gt;はiOS上でAR​を実現するためのフレームワークである&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>画像をグレースケールへ変換する（Metal編）</title>
      <link>https://mike-neko.github.io/blog/metalgray/</link>
      <pubDate>Wed, 03 May 2017 00:11:00 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/metalgray/</guid>
      <description>&lt;p&gt;RGBの&lt;code&gt;MTLTexture&lt;/code&gt;をグレースケールの&lt;code&gt;MTLTexture&lt;/code&gt;に変換する方法&lt;/p&gt;

&lt;p&gt;&lt;code&gt;UIImage&lt;/code&gt;を変換する方法は&lt;a href=&#34;../grayimage&#34;&gt;こちら&lt;/a&gt;を参照
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>UIImageをグレースケールに変換する</title>
      <link>https://mike-neko.github.io/blog/grayimage/</link>
      <pubDate>Mon, 24 Apr 2017 23:44:11 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/grayimage/</guid>
      <description>&lt;p&gt;RGBの&lt;code&gt;UIImage&lt;/code&gt;をグレースケールの&lt;code&gt;UIImage&lt;/code&gt;に変換する方法&lt;/p&gt;

&lt;p&gt;あと&lt;code&gt;CGContext&lt;/code&gt;周りも変わっていたのでそれも兼ねてメモ
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Model I/Oでモデルをロード</title>
      <link>https://mike-neko.github.io/blog/modelio-load/</link>
      <pubDate>Wed, 29 Mar 2017 00:58:37 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/modelio-load/</guid>
      <description>&lt;p&gt;MetalでModel I/O経由でモデルをファイルからロードする方法&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.apple.com/library/content/samplecode/MetalKitEssentials/Introduction/Intro.html&#34;&gt;公式サンプル&lt;/a&gt;よりもシンプルな方法&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Model I/Oで立体図形のメッシュを生成</title>
      <link>https://mike-neko.github.io/blog/modelio-mesh/</link>
      <pubDate>Sun, 05 Mar 2017 22:36:43 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/modelio-mesh/</guid>
      <description>&lt;p&gt;Metalで描画のテストなどでさくっとモデルを表示したい時に、Model I/Oを使って3Dのモデルを生成する方法&lt;/p&gt;

&lt;p&gt;法線やUV座標も作ってくれるので地味に便利である&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Metalの座標周りのメモ</title>
      <link>https://mike-neko.github.io/blog/metal-coordinate/</link>
      <pubDate>Thu, 02 Mar 2017 23:36:28 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/metal-coordinate/</guid>
      <description>&lt;p&gt;わりと間違いやすいので、Metalの座標周りのまとめ&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Swift3のポインタの実践編</title>
      <link>https://mike-neko.github.io/blog/swift-pointerc/</link>
      <pubDate>Fri, 24 Feb 2017 23:44:10 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/swift-pointerc/</guid>
      <description>&lt;p&gt;主にSwiftのポインタとCのポインタとの対比やポインタの変換方法についてのまとめ
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Swift3のポインタの基礎知識</title>
      <link>https://mike-neko.github.io/blog/swift-pointer/</link>
      <pubDate>Wed, 22 Feb 2017 23:55:36 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/swift-pointer/</guid>
      <description>&lt;p&gt;基本的にSwiftからポインタをそのまま扱う機会はほとんどないが、CのAPIやMetal等でポインタを扱う場合用のメモ&lt;/p&gt;

&lt;p&gt;なお、画像などのバイナリデータを単に扱いたいだけの場合は&lt;code&gt;Data&lt;/code&gt;が&lt;code&gt;UInt8&lt;/code&gt;の配列と同等に扱えるようになったのでそっちを使った方が良い&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitHubの自作ライブラリを公開する（ライブラリ編）</title>
      <link>https://mike-neko.github.io/blog/library2/</link>
      <pubDate>Wed, 14 Dec 2016 19:52:13 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/library2/</guid>
      <description>&lt;p&gt;&lt;code&gt;Swift&lt;/code&gt;の自作ライブラリ(&lt;a href=&#34;https://github.com/mike-neko/Kanagata&#34;&gt;Kanagata&lt;/a&gt;)をGitHubに公開するにあたってのメモ。
その2ではマルチプラットフォーム対応とライブラリ管理ツールの導入についての内容&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitHubの自作ライブラリを公開する（CI導入編）</title>
      <link>https://mike-neko.github.io/blog/library1/</link>
      <pubDate>Wed, 14 Dec 2016 19:51:59 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/library1/</guid>
      <description>&lt;p&gt;&lt;code&gt;Swift&lt;/code&gt;の自作ライブラリ(&lt;a href=&#34;https://github.com/mike-neko/Kanagata&#34;&gt;Kanagata&lt;/a&gt;)をGitHubに公開するにあたってのメモ。
その1ではCIの導入周りについての内容&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>UIPageViewControllerのエンドレス化などなど</title>
      <link>https://mike-neko.github.io/blog/pageview/</link>
      <pubDate>Tue, 13 Dec 2016 19:33:53 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/pageview/</guid>
      <description>&lt;p&gt;&lt;code&gt;UIPageViewController&lt;/code&gt;をエンドレスでページ切り替えする方法とかその他小ネタ&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Provisioning Profileの有効期限をアプリ内で取得</title>
      <link>https://mike-neko.github.io/blog/provisioning/</link>
      <pubDate>Wed, 07 Dec 2016 19:18:57 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/provisioning/</guid>
      <description>&lt;p&gt;&lt;code&gt;AdHoc&lt;/code&gt;で作成したiOSアプリ(ipa)にはプロビジョニングプロファイルの有効期限が存在するが、
その有効期限をアプリ内から確認する方法&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>multipart/form-dataによるファイルのアップロード</title>
      <link>https://mike-neko.github.io/blog/multipart/</link>
      <pubDate>Tue, 06 Dec 2016 22:04:28 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/multipart/</guid>
      <description>&lt;p&gt;（&lt;code&gt;Alamofire&lt;/code&gt;とかのライブラリを使った方が幸せになれると思うが）
HTMLのフォームからの送信と同じ様な&lt;code&gt;multipart&lt;/code&gt;によるアップロードをiOSからする方法&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WebRTCをiOSネイティブで使う(実装編)</title>
      <link>https://mike-neko.github.io/blog/webrtc-ios/</link>
      <pubDate>Wed, 30 Nov 2016 01:38:22 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/webrtc-ios/</guid>
      <description>&lt;p&gt;iOSで&lt;code&gt;WebRTC&lt;/code&gt;を使ったビデオチャットを作る方法&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WebRTCをiOSネイティブで使う(準備編)</title>
      <link>https://mike-neko.github.io/blog/webrtc-build/</link>
      <pubDate>Tue, 29 Nov 2016 23:24:55 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/webrtc-build/</guid>
      <description>&lt;p&gt;iOSのブラウザでは&lt;code&gt;WebRTC&lt;/code&gt;がサポートされていないので、利用したい場合は
ネイティブのフレームワークを使う必要がある。&lt;/p&gt;

&lt;p&gt;今回の準備編では公式のフレームワークを使うにあたってフレームワークの生成と組み込みまでの手順について&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MultipeerConnectivityでP2P通信</title>
      <link>https://mike-neko.github.io/blog/multipeer/</link>
      <pubDate>Tue, 29 Nov 2016 18:40:09 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/multipeer/</guid>
      <description>&lt;p&gt;iOS同士限定になるが、&lt;code&gt;Multipeer Connectivity Framework&lt;/code&gt;でお手軽にP2P通信をさせる方法&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>VPN上のWindows機へ接続</title>
      <link>https://mike-neko.github.io/blog/vpn-win/</link>
      <pubDate>Sun, 27 Nov 2016 22:50:47 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/vpn-win/</guid>
      <description>&lt;p&gt;&lt;code&gt;SSH&lt;/code&gt;が入っていないVPN上のWindowsへアクセスする方法&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>VagrantでCentOS6.8を使う</title>
      <link>https://mike-neko.github.io/blog/vagrant-cent/</link>
      <pubDate>Tue, 08 Nov 2016 21:32:51 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/vagrant-cent/</guid>
      <description>&lt;p&gt;野良BOXはちょっと怖いので公式BOXを利用しようとしたら、いろいろと落とし穴があったのでメモ&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CentOSからOracleへ接続</title>
      <link>https://mike-neko.github.io/blog/oracle-cent/</link>
      <pubDate>Thu, 03 Nov 2016 19:24:51 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/oracle-cent/</guid>
      <description>&lt;p&gt;CentOSのPHP5.6から別サーバで動いているOracleのDBへ&lt;code&gt;oci8&lt;/code&gt;で接続する方法

Macの場合は&lt;a href=&#34;../oracle-mac/&#34;&gt;こちら&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CentOSからSQLServerへ接続</title>
      <link>https://mike-neko.github.io/blog/mssql-cent/</link>
      <pubDate>Thu, 03 Nov 2016 19:24:51 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/mssql-cent/</guid>
      <description>&lt;p&gt;CentOSのPHP5.6から&lt;code&gt;PDO_ODBC&lt;/code&gt;でSQLServer(MSSQL)へ接続する方法

Macの場合は&lt;a href=&#34;../mssql-mac/&#34;&gt;こちら&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MacからOracleへ接続</title>
      <link>https://mike-neko.github.io/blog/oracle-mac/</link>
      <pubDate>Thu, 03 Nov 2016 19:24:51 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/oracle-mac/</guid>
      <description>&lt;p&gt;MacのPHP5.6から別サーバで動いているOracleのDBへ&lt;code&gt;oci8&lt;/code&gt;で接続する方法&lt;br /&gt;

CentOSの場合は&lt;a href=&#34;../oracle-cent/&#34;&gt;こちら&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MacからSQLServerへ接続</title>
      <link>https://mike-neko.github.io/blog/mssql-mac/</link>
      <pubDate>Thu, 03 Nov 2016 19:24:51 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/mssql-mac/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Guzzle(PHP)でAPNsの同時配信を行う</title>
      <link>https://mike-neko.github.io/blog/guzzle-apns/</link>
      <pubDate>Sat, 29 Oct 2016 22:40:57 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/guzzle-apns/</guid>
      <description>&lt;p&gt;&lt;code&gt;Guzzle&lt;/code&gt;でiOSのAPNs(Push通知)をお手軽に同時配信する方法&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Guzzleで非同期の並列リクエストを行う</title>
      <link>https://mike-neko.github.io/blog/guzzle/</link>
      <pubDate>Sat, 29 Oct 2016 16:50:33 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/guzzle/</guid>
      <description>&lt;p&gt;&lt;code&gt;PHP&lt;/code&gt;のHTTPクライアント(&lt;a href=&#34;http://docs.guzzlephp.org/en/latest/&#34;&gt;Guzzle&lt;/a&gt;)で非同期の並列リクエストを行う方法&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>UIScrollViewのAutoLayoutをStoryboardのみで設定</title>
      <link>https://mike-neko.github.io/blog/scrollview/</link>
      <pubDate>Sun, 23 Oct 2016 22:28:33 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/scrollview/</guid>
      <description>&lt;p&gt;Storyboard上だけでUIScrollViewのAutoLayoutを完結させる方法。
中のUIを動的に追加や削除しないのであればコードを書く必要もないし、
&lt;code&gt;UILabel&lt;/code&gt;のようにコンテンツに応じて動的に高さが変わるようなものにも対応可能&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>NotificationCenterの使い方</title>
      <link>https://mike-neko.github.io/blog/notification/</link>
      <pubDate>Sun, 23 Oct 2016 18:30:34 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/notification/</guid>
      <description>&lt;p&gt;旧&lt;code&gt;NSNotification&lt;/code&gt;がSwift3でちょっと変更が入ったので使い方と＋αのエクステンションのまとめ&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>さくらのレンタルサーバでredisを使う</title>
      <link>https://mike-neko.github.io/blog/redis-sakura/</link>
      <pubDate>Sat, 15 Oct 2016 21:53:49 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/redis-sakura/</guid>
      <description>&lt;p&gt;さくらのレンタルサーバ（スタンダード）に&lt;a href=&#34;http://redis.io/&#34;&gt;redis&lt;/a&gt;をインストールする方法のメモ&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>さくらのレンタルサーバでeasy_installを使う</title>
      <link>https://mike-neko.github.io/blog/easyinstall-sakura/</link>
      <pubDate>Sat, 15 Oct 2016 02:03:14 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/easyinstall-sakura/</guid>
      <description>&lt;p&gt;さくらのレンタルサーバ（スタンダード）でいつのまにか
&lt;a href=&#34;http://setuptools.readthedocs.io/en/latest/easy_install.html&#34;&gt;easy_install&lt;/a&gt;
が使えるようになっていたので使い方のメモ&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PhpStormからさくらのレンタルサーバを使う</title>
      <link>https://mike-neko.github.io/blog/phpstorm-sakura/</link>
      <pubDate>Mon, 10 Oct 2016 02:03:14 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/phpstorm-sakura/</guid>
      <description>&lt;p&gt;さくらのレンタルサーバ（スタンダード）をPhpStormから使うにあたっての便利な小ネタ&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Laravelをさくらのレンタルサーバへデプロイ</title>
      <link>https://mike-neko.github.io/blog/laravel-sakura/</link>
      <pubDate>Thu, 06 Oct 2016 00:27:56 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/laravel-sakura/</guid>
      <description>&lt;p&gt;ローカルで開発した&lt;code&gt;Laravel5&lt;/code&gt;のプロジェクトをさくらのレンタルサーバ（スタンダード）で公開する時のメモ&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Docker(Kitematic)&#43;PHPStormでMySQL環境をお手軽構築</title>
      <link>https://mike-neko.github.io/blog/docker-db/</link>
      <pubDate>Thu, 29 Sep 2016 01:44:58 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/docker-db/</guid>
      <description>&lt;p&gt;個人的には&lt;code&gt;MariaDB&lt;/code&gt;を使っているが、レンタルサーバや既存開発のものだと
まだまだ&lt;code&gt;MySQL&lt;/code&gt;の環境が必要なこともしばしば。。。&lt;/p&gt;

&lt;p&gt;かといって、そんなに使わない環境をわざわざローカルに構築するのも面倒なので、
さっくりとお手軽に速攻で構築してしまおうという時のメモ&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ATS有効の状態でオレオレ証明書を使って通信する</title>
      <link>https://mike-neko.github.io/blog/ios-cert/</link>
      <pubDate>Tue, 06 Sep 2016 00:35:57 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/ios-cert/</guid>
      <description>&lt;p&gt;&lt;code&gt;ATS&lt;/code&gt;が有効の場合、SSL/TLS通信でないと通信自体ができない&lt;/p&gt;

&lt;p&gt;が、開発時はローカル環境だったりドメイン自体がなかったりで正式なSSL証明書を使えないことが多い・・・
かといって、ATSをOFFにして開発するのも・・・&lt;/p&gt;

&lt;p&gt;って時に自己署名証明書（オレオレ証明書）を使ってしのぐ方法&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jazzyの使い方 その1</title>
      <link>https://mike-neko.github.io/blog/jazzy-cmd/</link>
      <pubDate>Sat, 03 Sep 2016 00:12:14 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/jazzy-cmd/</guid>
      <description>&lt;p&gt;Swiftのドキュメント生成ツールの&lt;a href=&#34;https://github.com/realm/jazzy&#34;&gt;jazzy&lt;/a&gt;の使い方。
その1はコマンド周りのメモ&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>APNs Provider API(http2)を利用する(iOS)</title>
      <link>https://mike-neko.github.io/blog/http2apns-ios/</link>
      <pubDate>Thu, 25 Aug 2016 23:00:38 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/http2apns-ios/</guid>
      <description>&lt;p&gt;iOSのAPNsをAPI経由で使う方法。
しかもiOS端末からPush通知を送信する方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>APNs Provider API(http2)を利用する(Node.js)</title>
      <link>https://mike-neko.github.io/blog/http2apns/</link>
      <pubDate>Thu, 11 Aug 2016 17:16:16 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/http2apns/</guid>
      <description>&lt;p&gt;iOSのAPNsをAPI経由で使う方法。サーバサイドは&lt;code&gt;Node.js&lt;/code&gt;を利用&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitHubにタグ付けする</title>
      <link>https://mike-neko.github.io/blog/gittag/</link>
      <pubDate>Tue, 02 Aug 2016 21:36:00 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/gittag/</guid>
      <description>&lt;p&gt;GitHubにタグを付ける方法。
&lt;code&gt;GitHub Desktop&lt;/code&gt;はブランチ周りはサポートしているけどタグ関係はサポートしていないのでメモしておく&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>KVOを利用する(Swift)</title>
      <link>https://mike-neko.github.io/blog/swift-kvo/</link>
      <pubDate>Mon, 25 Jul 2016 22:55:03 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/swift-kvo/</guid>
      <description>&lt;p&gt;&lt;code&gt;Swift&lt;/code&gt;で&lt;code&gt;KVO&lt;/code&gt;を利用する方法について。特に&lt;code&gt;context&lt;/code&gt;を一意の識別子として使いたい場合の方法
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SceneKitでMetalのシェーダを利用する(SCNProgram)</title>
      <link>https://mike-neko.github.io/blog/metalshader-scenekit/</link>
      <pubDate>Sun, 10 Jul 2016 18:28:58 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/metalshader-scenekit/</guid>
      <description>&lt;p&gt;&lt;code&gt;Metal&lt;/code&gt;を使いたい場合にネックとなるのが、シーンの構築とかモデル・テクスチャの管理。
なので、その面倒な部分を&lt;code&gt;SceneKit&lt;/code&gt;に任せたいという時の話。&lt;/p&gt;

&lt;p&gt;今回は描画周りに&lt;code&gt;Metal&lt;/code&gt;のシェーダを使うパターン。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WKWebViewの内容をPDFで保存する(Swift)</title>
      <link>https://mike-neko.github.io/blog/webview-pdf/</link>
      <pubDate>Thu, 23 Jun 2016 00:13:25 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/webview-pdf/</guid>
      <description>&lt;p&gt;昔に&lt;code&gt;UIWebView&lt;/code&gt;でやっていたものを最新の&lt;code&gt;WKWebView&lt;/code&gt;+&lt;code&gt;Swift&lt;/code&gt;で書き換えた時のメモ。&lt;/p&gt;

&lt;p&gt;内容は大したことないのだけれど、検索で引っかかるWebの資料がiOS9の実機で動かなかったので残しておく。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>QRコードの読み取りサンプル(Swift) その2</title>
      <link>https://mike-neko.github.io/blog/qr-reader/</link>
      <pubDate>Thu, 16 Jun 2016 21:17:36 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/qr-reader/</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;ソースはSwift2なので注意！&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;以前に書いたQRコードの読み取りサンプルの別バージョン。
今回はカメラ不要で画像データから直接QRコードを読み取りが可能&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>QRコードの読み取りサンプル(Swift) その1</title>
      <link>https://mike-neko.github.io/blog/code-reader/</link>
      <pubDate>Wed, 15 Jun 2016 22:52:40 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/code-reader/</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;ソースはSwift2なので注意！&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;iOS端末のカメラでQRコードを読み取り、認識されたコードを枠線で強調表示するサンプル&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>UnityからOpenCVを利用する(iOS)</title>
      <link>https://mike-neko.github.io/blog/unity-opencv/</link>
      <pubDate>Tue, 07 Jun 2016 00:56:50 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/unity-opencv/</guid>
      <description>&lt;p&gt;UnityからiOSのネイティブプラグイン経由で&lt;code&gt;OpenCV&lt;/code&gt;でカメラを利用するサンプル&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nginxをhttp2に対応させる</title>
      <link>https://mike-neko.github.io/blog/nginx-http2/</link>
      <pubDate>Fri, 03 Jun 2016 21:29:36 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/nginx-http2/</guid>
      <description>&lt;p&gt;以前に構築したDockerでの開発環境で使ったnginxを&lt;code&gt;http2&lt;/code&gt;に対応させた時のメモ。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Perfect APNs編</title>
      <link>https://mike-neko.github.io/blog/perfect-push/</link>
      <pubDate>Mon, 11 Apr 2016 19:45:28 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/perfect-push/</guid>
      <description>&lt;p&gt;サーバーサイドSwiftフレームワークの&lt;a href=&#34;https://perfect.org/&#34;&gt;Perfect&lt;/a&gt;の使い方のメモその3&lt;/p&gt;

&lt;p&gt;今回はiOSのプッシュ通知を送信する方法について&lt;/p&gt;

&lt;p&gt;Perfectは最新のAPNsの通信形式に対応していて、細かなエラーレスポンスを取れるのがメリット。
なので、開発用としては大変使いやすい&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Perfect 基礎編</title>
      <link>https://mike-neko.github.io/blog/perfect-2/</link>
      <pubDate>Sun, 10 Apr 2016 23:09:11 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/perfect-2/</guid>
      <description>&lt;p&gt;サーバーサイドSwiftフレームワークの&lt;a href=&#34;https://perfect.org/&#34;&gt;Perfect&lt;/a&gt;の使い方のメモその2&lt;/p&gt;

&lt;p&gt;基礎編ではルーティングやリクエストの処理方法のあたりまで&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Perfect 導入編</title>
      <link>https://mike-neko.github.io/blog/perfect-1/</link>
      <pubDate>Fri, 08 Apr 2016 22:25:06 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/perfect-1/</guid>
      <description>&lt;p&gt;サーバーサイドSwiftフレームワークの&lt;a href=&#34;https://perfect.org/&#34;&gt;Perfect&lt;/a&gt;の使い方のメモその1&lt;/p&gt;

&lt;p&gt;導入編ではベースとなるプロジェクトを一から作るあたりまで&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Docker構築メモ</title>
      <link>https://mike-neko.github.io/blog/docker/</link>
      <pubDate>Mon, 04 Apr 2016 00:35:57 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/docker/</guid>
      <description>&lt;p&gt;iOS用のサーバ環境をDockerでローカルに構築した時のメモ。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;なお、ローカルの開発用ということでセキュリティは考慮していないので注意&lt;/em&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dockerのコマンド備忘録</title>
      <link>https://mike-neko.github.io/blog/docker-cmd/</link>
      <pubDate>Sat, 02 Apr 2016 14:00:57 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/docker-cmd/</guid>
      <description>&lt;h2 id=&#34;dockerでよく使うコマンド&#34;&gt;Dockerでよく使うコマンド&lt;/h2&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>IPアドレス取得のサンプル(Swift)</title>
      <link>https://mike-neko.github.io/blog/ipaddress/</link>
      <pubDate>Mon, 07 Mar 2016 23:59:45 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/ipaddress/</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;以下はSwift2の情報で古い為、注意！&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;Swift3版のソースは&lt;a href=&#34;https://github.com/mike-neko/NetworkInfo&#34;&gt;こちら&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;(解説はそのうちに・・・・)&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;iOS端末のIPアドレスを取得するサンプル。Cの関数呼び出し周りも含めてSwiftにて実装。&lt;/p&gt;

&lt;p&gt;一応、Apple公式の方法でIPv6only環境でも動作確認済。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Metalによる砂のシミュレーションもどき</title>
      <link>https://mike-neko.github.io/blog/metal-sand/</link>
      <pubDate>Thu, 25 Feb 2016 22:05:16 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/metal-sand/</guid>
      <description>&lt;p&gt;MetalのGPGPUによる大量のパーティクル処理能力を活かしたデモ。
パーティクルをそれぞれ砂の一粒に見立てており、上から落下してきた砂粒が山のように積みあがっていく様子をシュミレートしている。&lt;/p&gt;

&lt;p&gt;なお、これも約26万パーティクルで60FPSを維持している。&lt;/p&gt;

&lt;h2 id=&#34;動作イメージ&#34;&gt;動作イメージ&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>SwiftでNSExceptionを処理する</title>
      <link>https://mike-neko.github.io/blog/objc-exception/</link>
      <pubDate>Sat, 20 Feb 2016 08:10:44 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/objc-exception/</guid>
      <description>&lt;p&gt;ObjectiveCで書かれた&lt;code&gt;NSException&lt;/code&gt;を発生させるソースをSwiftから利用したい時の処理方法。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;NSException&lt;/code&gt;は、ObjectiveCの&lt;code&gt;@try ~ @catch ~ @finally&lt;/code&gt;でしか例外処理を行えない。例外処理を書いていない時は、実行時エラーとして処理される。つまり、Swiftから&lt;code&gt;NSException&lt;/code&gt;を発生させるコードを呼び出して例外が起きると、問答無用でアプリが落ちてしまう・・・&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugoのshortcodeのメモ</title>
      <link>https://mike-neko.github.io/blog/hugo-shortcode/</link>
      <pubDate>Tue, 16 Feb 2016 23:07:23 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/hugo-shortcode/</guid>
      <description>&lt;p&gt;Hugoの&lt;code&gt;shortcode&lt;/code&gt;を使って、記事の中でHTMLのタグをべた書きしなくて良い様にする方法のメモ。あと、おまけで&lt;code&gt;shortcode&lt;/code&gt;をMarkdownの中でエスケープして表示する方法。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>UnityのSprite用シェーダ(2本)</title>
      <link>https://mike-neko.github.io/blog/sprite-shader/</link>
      <pubDate>Tue, 16 Feb 2016 04:13:47 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/sprite-shader/</guid>
      <description>&lt;p&gt;Unity公式のスプライトシェーダをベースにした、スプライトにエフェクトをつけるシェーダ2本。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;指定色でベタ塗りにするシェーダ：&lt;code&gt;SpriteBetaMask&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;指定色でアウトラインと影をつけるシェーダ：&lt;code&gt;SpriteOutline&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MetalのGPGPUによるパーティクルデモ</title>
      <link>https://mike-neko.github.io/blog/metal-image/</link>
      <pubDate>Thu, 11 Feb 2016 09:20:27 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/metal-image/</guid>
      <description>&lt;p&gt;読み込んだテクスチャをパーティクルに分解して動かすデモ。動きは滝のように画像がパーティクルに分解して落下していくのをイメージ。&lt;/p&gt;

&lt;p&gt;画像サイズが512*512、1ピクセル=1パーティクルに分解するので、約26万個のパーティクルを動かしているが、60FPSを維持している。約100万まで増やすとiPhone6+で30FPSぐらいとなる。&lt;/p&gt;

&lt;p&gt;そんなに複雑な計算をさせていないとはいえ、さすがGPGPUといったところ。なお、処理時間のほとんどはGPGPUの部分でCPUは余力がある様子。&lt;/p&gt;

&lt;h2 id=&#34;動作イメージ&#34;&gt;動作イメージ&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>Metal組み込み関数</title>
      <link>https://mike-neko.github.io/blog/metal-function/</link>
      <pubDate>Thu, 28 Jan 2016 22:32:26 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/metal-function/</guid>
      <description>&lt;h2 id=&#34;metalのシェーダで利用できる関数のまとめ&#34;&gt;Metalのシェーダで利用できる関数のまとめ&lt;/h2&gt;

&lt;h4 id=&#34;hlsl-glslは各言語との対比&#34;&gt;HLSL/GLSLは各言語との対比&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;(空白) : 同じ&lt;/li&gt;
&lt;li&gt;ー : 該当なし&lt;/li&gt;
&lt;li&gt;△ : 同等の関数があるが詳細が異なる&lt;/li&gt;
&lt;li&gt;(関数名) : 挙動は同じだが、名前が別の関数がある&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MetalのGPGPUによるPerlinノイズ</title>
      <link>https://mike-neko.github.io/blog/metal-noise/</link>
      <pubDate>Mon, 25 Jan 2016 19:41:59 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/metal-noise/</guid>
      <description>&lt;p&gt;GPGPUでリアルタイムにパーリンノイズを生成しテクスチャに書き込んで表示するデモ。&lt;/p&gt;

&lt;p&gt;パーリンノイズはGPU Gems2の改良パーリンノイズで、それを元にした数種類を選択可能。
デモでは3次元ノイズを生成し、z値だけを時間で加算していきノイズを変化させている。&lt;/p&gt;

&lt;h2 id=&#34;動作イメージ&#34;&gt;動作イメージ&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>MetalKitのSwift版サンプル</title>
      <link>https://mike-neko.github.io/blog/metal-model/</link>
      <pubDate>Fri, 22 Jan 2016 00:23:56 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/metal-model/</guid>
      <description>&lt;p&gt;元ネタのApple公式の&lt;a href=&#34;https://developer.apple.com/library/mac/samplecode/MetalKitEssentials/Introduction/Intro.html&#34;&gt;MetalKitEssentials&lt;/a&gt;をSwiftで書き直し＋αしたもの。
内容は主にMetalKitを使って、obj形式のモデルをテクスチャありで表示させるだけ。
シェーダもいたってシンプルでライトもなし。&lt;br /&gt;
ちなみに、MetalKitは&lt;strong&gt;iOS9以降&lt;/strong&gt;でしか使えないので注意。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugo利用方法メモ</title>
      <link>https://mike-neko.github.io/blog/hugo-memo/</link>
      <pubDate>Wed, 20 Jan 2016 22:48:33 +0900</pubDate>
      
      <guid>https://mike-neko.github.io/blog/hugo-memo/</guid>
      <description>&lt;p&gt;このブログは&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;+&lt;code&gt;GitHub Pages&lt;/code&gt;で公開しているがそれにあたってのメモ
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>